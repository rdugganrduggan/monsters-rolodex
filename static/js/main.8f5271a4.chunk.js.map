{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","console","log","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BACKL,EAAMI,QAAQE,OAEnB,mCAAMN,EAAMI,QAAQG,MAApB,WCNCC,EAAW,SAACR,GAErB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAwBA,QAASA,GAAtBA,EAAQC,UCLrBM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACrC,OACI,uBAAOZ,UAAU,aACba,KAAK,SACLF,YAAcA,EACdG,SAAWF,MC+DRG,E,kDAhEb,aAAe,IAAD,8BACZ,gBAyBFH,aAAe,SAACI,GAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAvB3D,EAAKC,MAAO,CACVb,SAAU,GACVU,YAAY,IALF,E,qDAUd,WAAoB,IAAD,OACjBI,MAAM,8CAEHC,MAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAIjBJ,MAAK,SAAAK,GACJH,QAAQC,IAAIE,GACZ,EAAKX,SAAS,CAACT,SAAUoB,S,oBAO/B,WAAU,IAAD,EAC2BC,KAAKR,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZY,EAAmBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASf,EAAYc,kBAElD,OACE,sBAAKhC,UAAW,MAAhB,UACE,oBAAIA,UAAU,eAAd,8BACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAiBiB,KAAKjB,eAExB,cAAC,EAAD,CAAUJ,SAAUsB,W,GAzCVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IADF,OAGAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8f5271a4.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css'\n\nexport const Card = (props) => {\n    return(\n        <div className='card-container'>\n            <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}   />\n            <h1>\n                {props.monster.name}\n            </h1>\n            <h2> {props.monster.email} </h2>\n        </div>\n    )\n\n}","import React from 'react';\nimport './card-list.style.css'\nimport { Card } from '../card/card.component'\n\nexport const CardList = (props) => {\n    //console.log(props);\n    return (\n        <div className='card-list'> \n            {props.monsters.map(monster => (\n                <Card key={monster.id}  monster={monster} />\n          ))}\n        </div>  \n    )\n};\n\n//</div>export default CardList.component;","import React from 'react';\n\nimport './search-box.style.css';\n\nexport const  SearchBox = ({placeholder, handleChange}) => {\n    return(\n        <input className='search-box' \n            type='search' \n            placeholder= {placeholder} \n            onChange= {handleChange}/>\n\n    )\n}","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n//function App() \nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state ={\n      monsters: [],\n      searchField:''\n    };\n    //this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      //.then(response => console.log(response))\n      .then(response => {\n        console.log(response)\n        return response.json();\n      }) \n      //.then(outy1 => console.log(outy1));\n      // .then(response => response.json())\n      .then(users => {\n        console.log(users)\n        this.setState({monsters: users})\n      });\n\n  }\n  \n  handleChange = (e) => {this.setState({ searchField: e.target.value})};\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return(\n      <div className= 'App'> \n        <h1 className='title-header'>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder='Search Monsters'\n          handleChange =  {this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} /> \n      </div>\n    );\n  }\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <code>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}